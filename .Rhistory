finalcov_percentchange$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[2]] <- ((finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabu_0.05_dvar"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])/finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])*100
finalcov_changes$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[3]] <- finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "10altsed"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$malg_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[3]] <- finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "10altsed"] - finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$ratio[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[3]] <- finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "10altsed"] - finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_percentchange$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[3]] <- ((finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "10altsed"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])/finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])*100
finalcov_changes$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[4]] <- finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "25altsed"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$malg_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[4]] <- finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "25altsed"] - finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$ratio[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[4]] <- finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "25altsed"] - finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_percentchange$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[4]] <- ((finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "25altsed"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])/finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])*100
finalcov_changes$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[5]] <- finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_10sed_dvar"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$malg_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[5]] <- finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_10sed_dvar"] - finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$ratio[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[5]] <- finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_10sed_dvar"] - finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_percentchange$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[5]] <- ((finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_10sed_dvar"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])/finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])*100
finalcov_changes$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[6]] <- finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_25sed_dvar"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$malg_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[6]] <- finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_25sed_dvar"] - finalcov_restr$malg_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_changes$ratio[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[6]] <- finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_25sed_dvar"] - finalcov_restr$ratio[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"]
finalcov_percentchange$coral_cover[finalcov_changes$graz == i & finalcov_changes$scenario == scenz[6]] <- ((finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "tabuqoliqoli_25sed_dvar"] - finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])/finalcov_restr$coral_cover[finalcov_restr$graz == i & finalcov_restr$scenario == "base_dvar"])*100
}
# New facet label names
grazinglevels.labs <- c("Low", "Medium", "High")
names(grazinglevels.labs) <- c("1", "2","3")
#grazinglevels.labs <- c("Empirical", "Pessimistic", "Middling", "Optimistic")
#names(grazinglevels.labs) <- c("1", "2", "3","4")
changeincoralcover_w25_abr <- ggplot(finalcov_changes, aes(x = scenario, y = coral_cover*100, alpha = 0.9)) +
geom_point(aes(colour = scenario))+
ggtitle(paste("Change in Coral Cover, dvar only,",connectivs[l],"PLD"))+
scale_x_discrete(limits=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1", "2", "3", "4","5", "6"), name = "Management Intervention")+
scale_color_manual(values=c("#FFC000", "#E69F00","#94cceb", "#56B4E9","#c790fc", "#AB56FC"),breaks=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar", "altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1 = 2km tabu increase within qoliqoli", "2 = 5km tabu increase", "3 = 10% Water Quality Improvement", "4 = 25% Water Quality Improvement", "5 = Low Mixed", "6 = High Mixed"), name = "Management Intervention")+
#scale_x_discrete(limits=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu", "5km tabu", "10altsed", "25altsed","qoliqoli_10sed", "qoliqoli_25sed"))+
#scale_color_manual(values=c("#FFC000", "#E69F00","#94cceb", "#56B4E9","#c790fc", "#AB56FC"),breaks=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar", "altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu", "5km tabu", "10altsed", "25altsed","qoliqoli_10sed", "qoliqoli_25sed"))+
ylab("Change in % Coral Cover")+
geom_hline(yintercept = 0, color = "red")+
#facet_wrap(~graz)
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeincoralcover_w25_abr, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeincoralcover_w25_abr_mgmtstressorimpactassessment_summary_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
changeinmalgcover_w25_abr <- ggplot(finalcov_changes, aes(x = scenario, y = malg_cover*100, alpha = 0.9)) +
geom_point(aes(colour = scenario))+
ggtitle(paste("Change in Malg Cover, dvar only,",connectivs[l],"PLD"))+
scale_x_discrete(limits=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1", "2", "3", "4","5", "6"), name = "Management Intervention")+
scale_color_manual(values=c("#FFC000", "#E69F00","#94cceb", "#56B4E9","#c790fc", "#AB56FC"),breaks=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar", "altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1 = 2km tabu increase within qoliqoli", "2 = 5km tabu increase", "3 = 10% Water Quality Improvement", "4 = 25% Water Quality Improvement", "5 = Low Mixed", "6 = High Mixed"), name = "Management Intervention")+
#scale_x_discrete(limits=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu", "5km tabu", "10altsed", "25altsed","qoliqoli_10sed", "qoliqoli_25sed"))+
#scale_color_manual(values=c("#FFC000", "#E69F00","#94cceb", "#56B4E9","#c790fc", "#AB56FC"),breaks=c("qoliqoli_basedvar", "tabu0.05_basedvar", "altsed10_basedvar", "altsed25_basedvar", "altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu", "5km tabu", "10altsed", "25altsed","qoliqoli_10sed", "qoliqoli_25sed"))+
ylab("Change in % Macroalgae Cover")+
geom_hline(yintercept = 0, color = "red")+
#facet_wrap(~graz)
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeinmalgcover_w25_abr, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeinmalgcover_w25_abr_mgmtstressorimpactassessment_summary_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
#looking at the tabu designations
finalcov_changes_qq <- finalcov_changes[finalcov_changes$scenario %in% c("qoliqoli_basedvar", "altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"),]
changeincoralcover_w25_abr_qoliqolicoloured <- ggplot(finalcov_changes_qq, aes(x = scenario, y = coral_cover*100, color = identity_qoliqoli, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
ggtitle(paste("Change in % Coral Cover, dvar only,",connectivs[l],"PLD"))+
ylab("Change in % Coral Cover")+
scale_x_discrete(limits=c("qoliqoli_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1","5", "6"), name = "Management Intervention")+
#scale_x_discrete(limits=c("qoliqoli_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu","qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 0, color = "red")+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeincoralcover_w25_abr_qoliqolicoloured, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeincoralcover_w25_abr_qoliqolicoloured_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
changeinmalgcover_w25_abr_qoliqolicoloured <- ggplot(finalcov_changes_qq, aes(x = scenario, y = malg_cover*100, color = identity_qoliqoli, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
ggtitle(paste("Change in Malg Cover, dvar only,",connectivs[l],"PLD"))+
ylab("Change in % Macroalgae Cover")+
scale_x_discrete(limits=c("qoliqoli_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("1","5", "6"), name = "Management Intervention")+
#scale_x_discrete(limits=c("qoliqoli_basedvar","altsed10_qoliqoli_basedvar", "altsed25_qoliqoli_basedvar"), labels=c("qoliqoli tabu","qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 0, color = "red")+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeinmalgcover_w25_abr_qoliqolicoloured, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeinmalgcover_w25_abr_qoliqolicoloured_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
finalcov_changes_0.05 <- finalcov_changes[finalcov_changes$scenario %in% c("tabu0.05_basedvar"),]
changeincoralcover_w25_abr_tabu5coloured <- ggplot(finalcov_changes_0.05, aes(x = scenario, y = coral_cover*100, color = identity_0.05, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
ggtitle(paste("Change in % Coral Cover, dvar only,",connectivs[l],"PLD"))+
ylab("Change in % Coral Cover")+
scale_x_discrete(limits=c("tabu0.05_basedvar"), labels=c("5km tabu increase"), name = "Management Intervention")+
#scale_x_discrete(limits=c("tabu0.05_basedvar"), labels=c("5km tabu"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 0, color = "red")+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeincoralcover_w25_abr_tabu5coloured, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeincoralcover_w25_abr_tabu5coloured_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
changeinmalgcover_w25_abr_tabu5coloured <- ggplot(finalcov_changes_0.05, aes(x = scenario, y = malg_cover*100, color = identity_0.05, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
ggtitle(paste("Change in Malg Cover, dvar only,",connectivs[l],"PLD"))+
ylab("Change in % Macroalgae Cover")+
scale_x_discrete(limits=c("tabu0.05_basedvar"), labels=c("5km tabu increase"), name = "Management Intervention")+
#scale_x_discrete(limits=c("tabu0.05_basedvar"), labels=c("5km tabu"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 0, color = "red")+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(changeinmalgcover_w25_abr_tabu5coloured, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/changeinmalgcover_w25_abr_tabu5coloured_7.3.2024.png"), bg = "transparent", height = 7, width = 5)
#the ones that tip backwards, how many of them are NOT the reefs that had a lower grazing rate post tabu enlargement?
#View(finalcov_changes_qq[!(finalcov_changes_qq$reef %in% qqlowerreefs),])
#View(finalcov_changes_qq[!(finalcov_changes_0.05$reef %in% fivelowerreefs),])
#back to the coral cover plot, curious what that looks like coloured by tabu designation
finalcov_restr$identity_qoliqoli <- rep(tabus_qoliqoli,3)
finalcov_restr$identity_0.05 <- rep(tabus_0.05,3)
finalcov_restr_qqtabu <- finalcov_restr[finalcov_restr$scenario %in% c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"),]
coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus <- ggplot(finalcov_restr_qqtabu, aes(x=scenario, y=coral_cover*100,colour=identity_qoliqoli, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
#geom_violin(color = NA)+
ggtitle(paste("Coral Cover, dvar only, qoli qoli tabus,",connectivs[l],"PLD"))+
scale_y_discrete(limits=c(0,10,30,50,75,100), name = "% Coral Cover")+
scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "1", "5", "6"), name = "Management Intervention")+
#scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "qoliqoli tabu", "qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 30, color = "red")+
#stat_summary(fun.data=data_summary, color = "black")+
#geom_jitter(shape=16, size = 0.2, position=position_jitter(0.2))+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus_7.3.2024.png"), bg = "transparent", height = 10, width = 7)
malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus <- ggplot(finalcov_restr_qqtabu, aes(x=scenario, y=malg_cover*100,colour=identity_qoliqoli, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
#geom_violin(color = NA)+
ggtitle(paste("Malg Cover, dvar only, qoli qoli tabus,",connectivs[l],"PLD"))+
scale_y_discrete(limits=c(0,10,30,50,75,100), name = "% Macroalgae Cover")+
scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "1", "5", "6"), name = "Management Intervention")+
#scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "qoliqoli tabu", "qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 30, color = "red")+
#stat_summary(fun.data=data_summary, color = "black")+
#geom_jitter(shape=16, size = 0.2, position=position_jitter(0.2))+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_qqtabus_7.3.2024.png"), bg = "transparent", height = 10, width = 7)
finalcov_restr_5tabu <- finalcov_restr[finalcov_restr$scenario %in% c("base_dvar", "tabu_0.05_dvar"),]
coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus <- ggplot(finalcov_restr_5tabu, aes(x=scenario, y=coral_cover*100,colour=identity_0.05, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
#geom_violin(color = NA)+
ggtitle(paste("Coral Cover, dvar only, 5km tabus,",connectivs[l],"PLD"))+
scale_y_discrete(limits=c(0,10,30,50,75,100), name = "% Coral Cover")+
scale_x_discrete(limits=c("base_dvar", "tabu_0.05_dvar"), labels=c("base", "5km tabu increase"), name = "Management Intervention")+
#scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "qoliqoli tabu", "qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 30, color = "red")+
#stat_summary(fun.data=data_summary, color = "black")+
#geom_jitter(shape=16, size = 0.2, position=position_jitter(0.2))+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/coralcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus_7.3.2024.png"), bg = "transparent", height = 10, width = 5)
malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus <- ggplot(finalcov_restr_5tabu, aes(x=scenario, y=malg_cover*100,colour=identity_0.05, alpha = 0.9)) +
geom_quasirandom(dodge.width=0.5)+
#geom_violin(color = NA)+
ggtitle(paste("Malg Cover, dvar only, 5km tabus,",connectivs[l],"PLD"))+
scale_y_discrete(limits=c(0,10,30,50,75,100), name = "% Macroalgae Cover")+
scale_x_discrete(limits=c("base_dvar", "tabu_0.05_dvar"), labels=c("base", "5km tabu increase"), name = "Management Intervention")+
#scale_x_discrete(limits=c("base_dvar", "tabu_qoliqoli_dvar", "tabuqoliqoli_10sed_dvar", "tabuqoliqoli_25sed_dvar"), labels=c("base", "qoliqoli tabu", "qoliqoli_10sed", "qoliqoli_25sed"))+
scale_color_manual(values=c("#a6611a","#018571","#80cdc1"),breaks=c("n","newtabu","oldtabu"),labels=c("Not in a Tabu", "Newly in a Tabu", "Originally in a Tabu"), name = "")+
geom_hline(yintercept = 30, color = "red")+
#stat_summary(fun.data=data_summary, color = "black")+
#geom_jitter(shape=16, size = 0.2, position=position_jitter(0.2))+
facet_wrap(~ graz, labeller = labeller(graz = grazinglevels.labs))
ggsave(malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus, filename = paste0("Final_Simulations/AddingConnectivitySensitivityAnalyses/BeeswarmPlots/",connectivs[l],"PLD/malgcover_mgmtstressorimpactassessmentabrw25_summary_beeswarm_5tabus_7.3.2024.png"), bg = "transparent", height = 10, width = 5)
}
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
coordinates <- newcoordinates
jointsite_rows <- which(coordinates$site %in% sitevector)
#herbivore abundance + benthic cover data
load("ConnectivityMatrices_12.2021/wcsonly_benthicfish_jointsiteyrsonly_20172020_abridged.RData") #generated in Fiji_status/Fish Belt Vis/2021_fishbelt_thesisproject/FishBelt_generatefishoverviewmaps.Rmd
#remove VIR10 from 2018 since we have a 2020 one, i.e. row 63
benthicfish_masterdataset <- wcsonly_benthicfish_jointsiteyrsonly_20172020_abridged[-63,]
#removing NS3 because the connectivity for that site is wrong since the coordinates were/are wrong
benthicfish_masterdataset <- benthicfish_masterdataset[-47,]
#convert herbivore abundance to a number between 0->1 by assigning 1 to the largest herbivore abundance recorded in the Fijian MERMAID database (as of 11.25.2021, out of 657 sample events, from Emily)
#look at: https://labs.eemb.ucsb.edu/burkepile/deron/research/herbivory-herbivore-diversity-and-ecosystem-function
largest_malgherbabundance <- 1573.33
#5172.61 is the max detritivore density recorded as of 11.25.2021, out of 657 sample events, from Emily
largest_detherbabundance <- 5172.61
#extract the sites
sitevector <- benthicfish_masterdataset$site
###looking at detritivore herbivore densities
#only the >2016 herbivore data from wcs fiji sites
#save(wcsonly_fiji_fishbelt_current, file = here("Fish Belt Vis","2021_fishbelt_thesisproject", "wcsonly_current_fiji_herbivoredata.RData"))
#load("~/GitHub/WCSFiji2020Internship/Fiji-status/Fish Belt Vis/2021_fishbelt_thesisproject/wcsonly_current_fiji_herbivoredata.RData")
load("Final_Simulations/wcsonly_current_fiji_herbivoredata.RData") #moved it into the folder
benthicfish_masterdataset_detherbs <- benthicfish_masterdataset
wcsonly_fiji_fishbelt_current_jointsitesonly <- wcsonly_fiji_fishbelt_current[wcsonly_fiji_fishbelt_current$site %in% sitevector,]
wcsonly_fiji_fishbelt_current_jointsitesonly <- wcsonly_fiji_fishbelt_current_jointsitesonly[-10,] #removing VIR10 2018
#are the sites in the same order? no
#setequal(wcsonly_fiji_fishbelt_current_jointsitesonly$site, benthicfish_masterdataset_detherbs$site)
#wcsonly_fiji_fishbelt_current_jointsitesonly$site %in% benthicfish_masterdataset_detherbs$site #(all TRUE both ways)
#wcsonly_fiji_fishbelt_current_jointsitesonly %>%
#  distinct(site) #only 75 distinct sites, two KB17 data points (keep the 2019 one bc only have 2019 benthic data) #<- a 1.25.2022 change
wcsonly_fiji_fishbelt_current_jointsitesonly <- wcsonly_fiji_fishbelt_current_jointsitesonly[-49,] #before: -17 when removing the 2019 one
wcsonly_fiji_fishbelt_current_jointsitesonly_abr <- wcsonly_fiji_fishbelt_current_jointsitesonly %>%
select(site, biomass_kgha_trophic_group_avg_herbivore_detritivore)
benthicfish_masterdataset_detherbs <- merge(benthicfish_masterdataset_detherbs, wcsonly_fiji_fishbelt_current_jointsitesonly_abr, by = "site")
benthicfish_masterdataset_detherbs$malg_density <- benthicfish_masterdataset_detherbs$biomass_kgha_trophic_group_avg_herbivore_macroalgae
benthicfish_masterdataset_detherbs$malg_density[is.na(benthicfish_masterdataset_detherbs$malg_density)] <- 0
#NEW 5.6.2023: divide the malg herb density by the malg herb max and the det herb density by the det herb max
benthicfish_masterdataset_detherbs$comb_grazinglevel <- (benthicfish_masterdataset_detherbs$biomass_kgha_trophic_group_avg_herbivore_detritivore/largest_detherbabundance) + (benthicfish_masterdataset_detherbs$malg_density/largest_malgherbabundance)
#OLD: benthicfish_masterdataset_detherbs$comb_grazinglevel <- (benthicfish_masterdataset_detherbs$biomass_kgha_trophic_group_avg_herbivore_detritivore + benthicfish_masterdataset_detherbs$malg_density)/(largest_detherbabundance+largest_malgherbabundance)
benthicfish_masterdataset <- benthicfish_masterdataset_detherbs
#REMOVED THIS BIT
#scale it so the grazing rate either has a mean of 0.1, 0.3 or 0.5
#median(benthicfish_masterdataset$comb_grazinglevel)
MD_scale <- 0.1/median(benthicfish_masterdataset$comb_grazinglevel) #if multiply by 2.338038 will get a median of 0.1
ASS_scale <- 0.3/median(benthicfish_masterdataset$comb_grazinglevel) #7.014113
CD_scale <- 0.5/median(benthicfish_masterdataset$comb_grazinglevel) #11.690188
#checking
#median(benthicfish_masterdataset$grazinglevel*CD_scale) #0.1, 0.3, 0.5 confirmed
scalingfactors <- c(MD_scale, ASS_scale, CD_scale)
#get 'turf' cover by 1-(coral_cover)-(malg_cover)
benthicfish_masterdataset$malg_cover <- round((benthicfish_masterdataset$percent_cover_benthic_category_avg_macroalgae/100),4) #chose 4 because that's as accurate/precise/? as the measurement was initially
benthicfish_masterdataset$coral_cover <- round((benthicfish_masterdataset$percent_cover_benthic_category_avg_hard_coral/100),4)
benthicfish_masterdataset$turf_cover <- 1 - benthicfish_masterdataset$coral_cover - benthicfish_masterdataset$malg_cover
#extract the sites
sitevector <- benthicfish_masterdataset$site
saveRDS(sitevector, file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
sitevector <- readRDS(file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
coordinates <- newcoordinates
jointsite_rows <- which(coordinates$site %in% sitevector)
jointsite_coral_weightedavgconnmat <- weightedavgconnmat[jointsite_rows, jointsite_rows]
#Check the single-PLD connectivity matrices (PLD 10 and higher)
load("BaseSimulationWork_1.2022/Conn_Mat_Sum.RData")
largecoral_PLD_connmat <- list()
jointsite_largecoralPLDconnmat <- list()
for(i in 1:25){
largecoral_PLD_connmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
jointsite_largecoralPLDconnmat[[i]] <- largecoral_PLD_connmat[[i]][jointsite_rows, jointsite_rows]
}
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
sitevector <- readRDS(file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
coordinates <- newcoordinates
jointsite_rows <- which(coordinates$site %in% sitevector)
jointsite_coral_weightedavgconnmat <- weightedavgconnmat[jointsite_rows, jointsite_rows]
#make into a graph object
weightedPLD_g <- graph.adjacency(as.matrix(jointsite_coral_weightedavgconnmat), weighted = TRUE)
library(igraph)
#make into a graph object
weightedPLD_g <- graph.adjacency(as.matrix(jointsite_coral_weightedavgconnmat), weighted = TRUE)
clusters(weightedPLD_g,mode="weak")
full_weightedPLD_g <- graph.adjacency(as.matrix(weightedavgconnmat), weighted = TRUE)
clusters(full_weightedPLD_g,mode="weak")
clusters(full_weightedPLD_g, mode = "strong")
mean_distance(full_weightedPLD_g, directed = TRUE)
diameter(full_weightedPLD_g,directed = TRUE,weights =E(full_weightedPLD_g)$weight)
?diameter
degree(weightedPLD_g)
median(degree(weightedPLD_g))
average(degree(weightedPLD_g))
mean(degree(weightedPLD_g)) #6
?mean_distance
load("BaseSimulationWork_1.2022/Conn_Mat_Sum.RData")
singlePLD_coralconnmat <- list()
#jointsite_coralsinglePLDconnmat <- list()
singlePLD_graphs <- list()
weakclusters <- strongclusters <- avg_degree <- avg_shortestdistance <- diametr <- list()
for(i in 1:25){
singlePLD_coralconnmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
#jointsite_coralsinglePLDconnmat[[i]] <- singlePLD_coralconnmat[[i]][jointsite_rows, jointsite_rows]
singlePLD_graphs[[i]] <- graph.adjacency(as.matrix(singlePLD_coralconnmat[[i]]), weighted = TRUE)
weakclusters[[i]] <- clusters(singlePLD_graphs[[i]],mode="weak")$no
strongclusters[[i]] <- clusters(singlePLD_graphs[[i]], mode = "strong")$no
#average shortest path lengths
avg_shortestdistance[[i]] <- mean_distance(singlePLD_graphs[[i]], directed = TRUE)
#diameter
diametr[[i]] <- diameter(singlePLD_graphs[[i]],directed = TRUE,weights =E(singlePLD_graphs[[i]])$weight)
#average degree
avg_degree[[i]] <- mean(degree(singlePLD_graphs[[i]]))
}
weakclusters
clusters(singlePLD_graphs[[i]],mode="weak")
#Check the single-PLD connectivity matrices (PLD 10 and higher)
load("BaseSimulationWork_1.2022/Conn_Mat_Sum.RData")
singlePLD_coralconnmat <- list()
#jointsite_coralsinglePLDconnmat <- list()
singlePLD_graphs <- list()
singlePLDgraphs_properties <- data.frame(PLD = seq(10,130,5), numweakclusters = NA, numstrongclusters = NA, avg_degree = NA, avg_shortestdistance = NA, diametr = NA)
for(i in 1:25){
singlePLD_coralconnmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
#jointsite_coralsinglePLDconnmat[[i]] <- singlePLD_coralconnmat[[i]][jointsite_rows, jointsite_rows]
singlePLD_graphs[[i]] <- graph.adjacency(as.matrix(singlePLD_coralconnmat[[i]]), weighted = TRUE)
singlePLDgraphs_properties$numweakclusters[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]],mode="weak")$no
singlePLDgraphs_properties$numstrongclusters[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]], mode = "strong")$no
#average shortest path lengths
singlePLDgraphs_properties$avg_shortestdistance[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- mean_distance(singlePLD_graphs[[i]], directed = TRUE)
#diameter
singlePLDgraphs_properties$diametr[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- diameter(singlePLD_graphs[[i]],directed = TRUE,weights =E(singlePLD_graphs[[i]])$weight)
#average degree
singlePLDgraphs_properties$avg_degree[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- mean(degree(singlePLD_graphs[[i]]))
}
View(singlePLDgraphs_properties)
singlePLDgraphs_properties <- data.frame(PLD = c("weighted",seq(10,130,5)), numweakclusters = NA, numstrongclusters = NA, avg_degree = NA, avg_shortestdistance = NA, diametr = NA)
for(i in 1:25){
singlePLD_coralconnmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
#jointsite_coralsinglePLDconnmat[[i]] <- singlePLD_coralconnmat[[i]][jointsite_rows, jointsite_rows]
singlePLD_graphs[[i]] <- graph.adjacency(as.matrix(singlePLD_coralconnmat[[i]]), weighted = TRUE)
singlePLDgraphs_properties$numweakclusters[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]],mode="weak")$no
singlePLDgraphs_properties$numstrongclusters[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]], mode = "strong")$no
#average shortest path lengths
singlePLDgraphs_properties$avg_shortestdistance[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- mean_distance(singlePLD_graphs[[i]], directed = TRUE)
#diameter
singlePLDgraphs_properties$diametr[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- diameter(singlePLD_graphs[[i]],directed = TRUE,weights =E(singlePLD_graphs[[i]])$weight)
#average degree
singlePLDgraphs_properties$avg_degree[singlePLDgraphs_properties$PLD == ((i+1)*5)] <- mean(degree(singlePLD_graphs[[i]]))
}
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
library(igraph)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
#removing this because realized needed to calculate the properties of the full network
#sitevector <- readRDS(file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
#coordinates <- newcoordinates
#jointsite_rows <- which(coordinates$site %in% sitevector)
#jointsite_coral_weightedavgconnmat <- weightedavgconnmat[jointsite_rows, jointsite_rows]
#make into a graph object
#weightedPLD_g <- graph.adjacency(as.matrix(jointsite_coral_weightedavgconnmat), weighted = TRUE)
full_weightedPLD_g <- graph.adjacency(as.matrix(weightedavgconnmat), weighted = TRUE)
#put all of the properties into this dataframe
graphs_properties <- data.frame(PLD = c("weighted",seq(10,130,5)), numweakclusters = NA, numstrongclusters = NA, avg_degree = NA, avg_shortestdistance = NA, diametr = NA)
#check properties
graphs_properties$numweakclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g,mode="weak")$no #1 network
graphs_properties$numstrongclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g, mode = "strong")$no #58 networks, most of which are 1-reef site large (except for one which has 494 reef sites)
#average shortest path lengths
graphs_properties$avg_shortestdistance[graphs_properties$PLD == "weighted"] <- mean_distance(full_weightedPLD_g, directed = TRUE) #1.702294e-06
#diameter
graphs_properties$diametr[graphs_properties$PLD == "weighted"] <- diameter(full_weightedPLD_g,directed = TRUE,weights =E(full_weightedPLD_g)$weight) #6.412475e-05
#average degree
graphs_properties$avg_degree[graphs_properties$PLD == "weighted"] <- mean(degree(weightedPLD_g)) #7.333333
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
library(igraph)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
#removing this because realized needed to calculate the properties of the full network
#sitevector <- readRDS(file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
#coordinates <- newcoordinates
#jointsite_rows <- which(coordinates$site %in% sitevector)
#jointsite_coral_weightedavgconnmat <- weightedavgconnmat[jointsite_rows, jointsite_rows]
#make into a graph object
#weightedPLD_g <- graph.adjacency(as.matrix(jointsite_coral_weightedavgconnmat), weighted = TRUE)
full_weightedPLD_g <- graph.adjacency(as.matrix(weightedavgconnmat), weighted = TRUE)
#put all of the properties into this dataframe
graphs_properties <- data.frame(PLD = c("weighted",seq(10,130,5)), numweakclusters = NA, numstrongclusters = NA, avg_degree = NA, avg_shortestdistance = NA, diametr = NA)
#check properties
graphs_properties$numweakclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g,mode="weak")$no #1 network
graphs_properties$numstrongclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g, mode = "strong")$no #58 networks, most of which are 1-reef site large (except for one which has 494 reef sites)
#average shortest path lengths
graphs_properties$avg_shortestdistance[graphs_properties$PLD == "weighted"] <- mean_distance(full_weightedPLD_g, directed = TRUE) #1.702294e-06
#diameter
graphs_properties$diametr[graphs_properties$PLD == "weighted"] <- diameter(full_weightedPLD_g,directed = TRUE,weights =E(full_weightedPLD_g)$weight) #6.412475e-05
#average degree
graphs_properties$avg_degree[graphs_properties$PLD == "weighted"] <- mean(degree(full_weightedPLD_g)) #7.333333
#Check the single-PLD connectivity matrices (PLD 10 and higher)
load("BaseSimulationWork_1.2022/Conn_Mat_Sum.RData")
singlePLD_coralconnmat <- list()
#jointsite_coralsinglePLDconnmat <- list()
singlePLD_graphs <- list()
for(i in 1:25){
singlePLD_coralconnmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
#jointsite_coralsinglePLDconnmat[[i]] <- singlePLD_coralconnmat[[i]][jointsite_rows, jointsite_rows]
singlePLD_graphs[[i]] <- graph.adjacency(as.matrix(singlePLD_coralconnmat[[i]]), weighted = TRUE)
graphs_properties$numweakclusters[graphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]],mode="weak")$no
graphs_properties$numstrongclusters[graphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]], mode = "strong")$no
#average shortest path lengths
graphs_properties$avg_shortestdistance[graphs_properties$PLD == ((i+1)*5)] <- mean_distance(singlePLD_graphs[[i]], directed = TRUE)
#diameter
graphs_properties$diametr[graphs_properties$PLD == ((i+1)*5)] <- diameter(singlePLD_graphs[[i]],directed = TRUE,weights =E(singlePLD_graphs[[i]])$weight)
#average degree
graphs_properties$avg_degree[graphs_properties$PLD == ((i+1)*5)] <- mean(degree(singlePLD_graphs[[i]]))
}
View(graphs_properties)
degree(full_weightedPLD_g)
clusters(singlePLD_graphs[[i]],mode="weak")
length(which(clusters(singlePLD_graphs[[i]],mode="weak")$csize < 3))
length(which(clusters(singlePLD_graphs[[i]],mode="weak")$csize > 2))
###load in libraries
library(scales)
library(deSolve)
library(geometry)
library(fields)
#library(optparse)
library(maps)
library(rgdal)
library(ggplot2)
library(viridis)
library(dplyr)
library(plyr)
library(igraph)
setwd("~/Dropbox/Github/PhDProjects/Fiji_StabilityConnectivitySimulation/")
#removing this because realized needed to calculate the properties of the full network
#sitevector <- readRDS(file = paste0("Final_Simulations/sitevector_7.15.2024.rds")) #saving this because im tired of re-calculating it
#check some global network properties: how many networks, avg degree of nodes in the network, average shortest path length, diameter, modularity
#load in the original weighted connectivity matrix
load("BaseSimulationWork_1.2022/weightedavgconnmat.RData")
#^weightedavgconnmat - for all sites
#subset it to only the 76 sites with both benthic cover and fish abundance data #NEED TO FIND COORDINATES BELOW
load("BaseSimulationWork_1.2022/greiner_coordinatesfromalldata_dupsremoved_1.25.2022.RData") #newcoordinates; abridged coordinate file that corresponds with conn mat above, site order-wise
#coordinates <- newcoordinates
#jointsite_rows <- which(coordinates$site %in% sitevector)
#jointsite_coral_weightedavgconnmat <- weightedavgconnmat[jointsite_rows, jointsite_rows]
#make into a graph object
#weightedPLD_g <- graph.adjacency(as.matrix(jointsite_coral_weightedavgconnmat), weighted = TRUE)
full_weightedPLD_g <- graph.adjacency(as.matrix(weightedavgconnmat), weighted = TRUE)
#put all of the properties into this dataframe
graphs_properties <- data.frame(PLD = c("weighted",seq(10,130,5)), numweakclusters = NA, numstrongclusters = NA, numlarge_weakclusters = NA, numlarge_strongclusters = NA, avg_degree = NA, avg_shortestdistance = NA, diametr = NA)
#check properties
graphs_properties$numweakclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g,mode="weak")$no #1 network
graphs_properties$numstrongclusters[graphs_properties$PLD == "weighted"] <- clusters(full_weightedPLD_g, mode = "strong")$no #58 networks, most of which are 1-reef site large (except for one which has 494 reef sites)
graphs_properties$numlarge_weakclusters[graphs_properties$PLD == "weighted"] <- length(which(clusters(full_weightedPLD_g,mode="weak")$csize > 2))
graphs_properties$numlarge_strongclusters[graphs_properties$PLD == "weighted"] <- length(which(clusters(full_weightedPLD_g,mode="strong")$csize > 2))
#average shortest path lengths
graphs_properties$avg_shortestdistance[graphs_properties$PLD == "weighted"] <- mean_distance(full_weightedPLD_g, directed = TRUE) #1.702294e-06
#diameter
graphs_properties$diametr[graphs_properties$PLD == "weighted"] <- diameter(full_weightedPLD_g,directed = TRUE,weights =E(full_weightedPLD_g)$weight) #6.412475e-05
#average degree
graphs_properties$avg_degree[graphs_properties$PLD == "weighted"] <- mean(degree(full_weightedPLD_g))
#Check the single-PLD connectivity matrices (PLD 10 and higher)
load("BaseSimulationWork_1.2022/Conn_Mat_Sum.RData")
singlePLD_coralconnmat <- list()
#jointsite_coralsinglePLDconnmat <- list()
singlePLD_graphs <- list()
for(i in 1:25){
singlePLD_coralconnmat[[i]] <- Conn_Mat_Sum[[(i+1)]]
#jointsite_coralsinglePLDconnmat[[i]] <- singlePLD_coralconnmat[[i]][jointsite_rows, jointsite_rows]
singlePLD_graphs[[i]] <- graph.adjacency(as.matrix(singlePLD_coralconnmat[[i]]), weighted = TRUE)
graphs_properties$numweakclusters[graphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]],mode="weak")$no
graphs_properties$numstrongclusters[graphs_properties$PLD == ((i+1)*5)] <- clusters(singlePLD_graphs[[i]], mode = "strong")$no
graphs_properties$numlarge_weakclusters[graphs_properties$PLD == ((i+1)*5)] <- length(which(clusters(singlePLD_graphs[[i]],mode="weak")$csize > 2))
graphs_properties$numlarge_strongclusters[graphs_properties$PLD == ((i+1)*5)] <- length(which(clusters(singlePLD_graphs[[i]],mode="strong")$csize > 2))
#average shortest path lengths
graphs_properties$avg_shortestdistance[graphs_properties$PLD == ((i+1)*5)] <- mean_distance(singlePLD_graphs[[i]], directed = TRUE)
#diameter
graphs_properties$diametr[graphs_properties$PLD == ((i+1)*5)] <- diameter(singlePLD_graphs[[i]],directed = TRUE,weights =E(singlePLD_graphs[[i]])$weight)
#average degree
graphs_properties$avg_degree[graphs_properties$PLD == ((i+1)*5)] <- mean(degree(singlePLD_graphs[[i]]))
}
View(graphs_properties)
